{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\projects\\\\Secterica\\\\Gon\\\\App\\\\GonAppV20\\\\components\\\\paving-route-screen\\\\PavingRouteScreen.js\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar, List } from \"react-native-paper\";\nimport ComponentWithButtonTextAndBackgroundImage from \"../main-screen/ComponentWithButtonTextAndBackgroundImage\";\nvar traceRoutes = [{\n  id: 1,\n  distances: [10, 10, 10, 20]\n}, {\n  id: 2,\n  distances: [10, 10, 10, 20]\n}, {\n  id: 3,\n  distances: [10, 10, 10, 20]\n}, {\n  id: 4,\n  distances: [10, 10, 10, 20]\n}, {\n  id: 5,\n  distances: [10, 10, 10, 20]\n}];\nvar gateways = [{\n  id: 1,\n  distance: 10\n}, {\n  id: 2,\n  distance: 30\n}, {\n  id: 3,\n  distance: 50\n}, {\n  id: 4,\n  distance: 75\n}, {\n  id: 5,\n  distance: 100\n}];\n\nvar bg1 = require(\"../../photos/backgr/bg.png\");\n\nvar bg2 = require(\"../../photos/backgr/bg_2.png\");\n\nexport default function PavingRouteScreen() {\n  var _this = this;\n\n  var navigation = useNavigation();\n\n  var renderRoute = function renderRoute(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      style: {\n        marginHorizontal: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(ImageBackground, {\n      style: [{\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }],\n      imageStyle: {\n        resizeMode: \"contain\"\n      },\n      source: index % 2 === 0 ? bg1 : bg2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, item.distances.map(function (item, index_of_item) {\n      return React.createElement(Text, {\n        style: {\n          color: index % 2 === 0 ? \"#fff\" : \"#000\"\n        },\n        key: JSON.stringify(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, item);\n    }))));\n  };\n\n  var renderGatewayListElement = function renderGatewayListElement(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(List.Item, {\n      left: function left(props) {\n        return React.createElement(List.Icon, {\n          icon: require(\"../../photos/backgr/location.png\"),\n          size: 20,\n          style: {\n            resizeMode: \"contain\"\n          },\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        });\n      },\n      title: item.distance + \" метрів\",\n      titleStyle: {\n        color: \"#fff\"\n      },\n      right: function right(props) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }, React.createElement(List.Icon, {\n          icon: require(\"../../photos/backgr/edit.png\"),\n          color: \"white\",\n          style: {\n            paddingHorizontal: 0,\n            marginHorizontal: 0,\n            resizeMode: \"contain\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }), React.createElement(List.Icon, {\n          icon: \"minus\",\n          color: \"white\",\n          style: {\n            paddingHorizontal: 0,\n            marginHorizontal: 0\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }));\n      },\n      style: {\n        backgroundColor: \"#85BAF3\",\n        padding: 0,\n        margin: 5,\n        borderRadius: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, React.createElement(Appbar.Header, {\n    theme: {\n      colors: {\n        primary: \"white\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(Appbar.Action, {\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    icon: \"chevron-left\",\n    size: 30,\n    color: \"#888\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(Appbar.Content, {\n    title: \"\\u041F\\u0440\\u043E\\u043A\\u043B\\u0430\\u0434\\u0430\\u043D\\u043D\\u044F \\u0442\\u0440\\u0430\\u0441\\u0438\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"dots-vertical\",\n    onPress: function onPress() {},\n    color: \"#888\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      margin: 10,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u0438 \\u043F\\u043E\\u043F\\u0435\\u0440\\u0435\\u0434\\u043D\\u0456\\u0439 \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D\"), React.createElement(FlatList, {\n    horizontal: true,\n    data: traceRoutes,\n    renderItem: renderRoute,\n    keyExtractor: function keyExtractor(item, index) {\n      return JSON.stringify(item.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043D\\u043E\\u0432\\u0438\\u0439 \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D\"), React.createElement(FlatList, {\n    data: gateways,\n    renderItem: renderGatewayListElement,\n    keyExtractor: function keyExtractor(item, index) {\n      return JSON.stringify(item.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), React.createElement(ComponentWithButtonTextAndBackgroundImage, {\n    onPress: function onPress() {},\n    text: \"Розпочати тренування\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/User/projects/Secterica/Gon/App/GonAppV20/components/paving-route-screen/PavingRouteScreen.js"],"names":["useNavigation","React","Appbar","List","ComponentWithButtonTextAndBackgroundImage","traceRoutes","id","distances","gateways","distance","bg1","require","bg2","PavingRouteScreen","navigation","renderRoute","item","index","marginHorizontal","width","alignItems","justifyContent","resizeMode","padding","map","index_of_item","color","JSON","stringify","renderGatewayListElement","props","flexDirection","paddingHorizontal","backgroundColor","margin","borderRadius","height","colors","primary","goBack","flex","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\nimport React from \"react\";\nimport {\n  FlatList,\n  ImageBackground,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport { Appbar, List } from \"react-native-paper\";\nimport ComponentWithButtonTextAndBackgroundImage from \"../main-screen/ComponentWithButtonTextAndBackgroundImage\";\n\nconst traceRoutes = [\n  { id: 1, distances: [10, 10, 10, 20] },\n  { id: 2, distances: [10, 10, 10, 20] },\n  { id: 3, distances: [10, 10, 10, 20] },\n  { id: 4, distances: [10, 10, 10, 20] },\n  { id: 5, distances: [10, 10, 10, 20] },\n];\n\nconst gateways = [\n  { id: 1, distance: 10 },\n  { id: 2, distance: 30 },\n  { id: 3, distance: 50 },\n  { id: 4, distance: 75 },\n  { id: 5, distance: 100 },\n];\n\nconst bg1 = require(\"../../photos/backgr/bg.png\");\nconst bg2 = require(\"../../photos/backgr/bg_2.png\");\n\nexport default function PavingRouteScreen() {\n  const navigation = useNavigation();\n  const renderRoute = ({ item, index }) => {\n    return (\n      <View style={{ marginHorizontal: 10 }}>\n        <ImageBackground\n          style={[\n            {\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            },\n          ]}\n          imageStyle={{\n            resizeMode: \"contain\",\n          }}\n          source={index % 2 === 0 ? bg1 : bg2}\n        >\n          <View style={{ padding: 40 }}>\n            {item.distances.map((item, index_of_item) => (\n              <Text\n                style={{ color: index % 2 === 0 ? \"#fff\" : \"#000\" }}\n                key={JSON.stringify(item.id)}\n              >\n                {item}\n              </Text>\n            ))}\n          </View>\n        </ImageBackground>\n      </View>\n    );\n  };\n\n  const renderGatewayListElement = ({ item, index }) => {\n    return (\n      <View>\n        <List.Item\n          left={(props) => (\n            <List.Icon\n              icon={require(\"../../photos/backgr/location.png\")}\n              size={20}\n              style={{\n                resizeMode: \"contain\",\n              }}\n              // color={props.color}\n              color={\"white\"}\n            />\n          )}\n          title={item.distance + \" метрів\"}\n          titleStyle={{\n            color: \"#fff\",\n          }}\n          right={(props) => {\n            return (\n              <View style={{ flexDirection: \"row\" }}>\n                <List.Icon\n                  icon={require(\"../../photos/backgr/edit.png\")}\n                  // color={props.color}\n                  color={\"white\"}\n                  style={{\n                    paddingHorizontal: 0,\n                    marginHorizontal: 0,\n                    resizeMode: \"contain\",\n                  }}\n                />\n                <List.Icon\n                  icon={\"minus\"}\n                  // color={props.color}\n                  color={\"white\"}\n                  style={{\n                    paddingHorizontal: 0,\n                    marginHorizontal: 0,\n                  }}\n                />\n              </View>\n            );\n          }}\n          style={{\n            backgroundColor: \"#85BAF3\",\n            padding: 0,\n            margin: 5,\n            borderRadius: 10,\n          }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ height: \"100%\" }}>\n      <Appbar.Header theme={{ colors: { primary: \"white\" } }}>\n        <Appbar.Action\n          onPress={() => {\n            navigation.goBack();\n          }}\n          icon={\"chevron-left\"}\n          size={30}\n          color={\"#888\"}\n        />\n        <Appbar.Content title=\"Прокладання траси\" />\n        <Appbar.Action icon=\"dots-vertical\" onPress={() => {}} color={\"#888\"} />\n      </Appbar.Header>\n      <View style={{ margin: 10, flex: 1 }}>\n        <Text>Обрати попередній шаблон</Text>\n        <FlatList\n          horizontal={true}\n          data={traceRoutes}\n          renderItem={renderRoute}\n          keyExtractor={(item, index) => JSON.stringify(item.id)}\n          // contentContainerStyle={{height: }}\n        />\n        <Text>Створити новий шаблон</Text>\n        <FlatList\n          // contentContainerStyle={{flex: 1}}\n          data={gateways}\n          renderItem={renderGatewayListElement}\n          keyExtractor={(item, index) => JSON.stringify(item.id)}\n        />\n        <ComponentWithButtonTextAndBackgroundImage\n          onPress={() => {}}\n          text={\"Розпочати тренування\"}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}