{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\projects\\\\Secterica\\\\Gon\\\\App\\\\GonAppV20\\\\components\\\\SignUpScreen.js\";\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Button, TextInput, Checkbox, useTheme, IconButton } from 'react-native-paper';\nvar imageWidth = Dimensions.get(\"screen\").width * 0.8;\nvar imageHeight = imageWidth;\nvar screenHeight = Dimensions.get('screen').height;\nexport default function SignUpScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checked = _useState8[0],\n      setChecked = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      emailError = _useState10[0],\n      setEmailError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      usernameError = _useState12[0],\n      setUsernameError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passwordError = _useState14[0],\n      setPasswordError = _useState14[1];\n\n  var navigation = useNavigation();\n  var colors = useTheme().colors;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../photos/login_signup/login.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text_get_started,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \" \\u0420\\u043E\\u0437\\u043F\\u043E\\u0447\\u043D\\u0435\\u043C\\u043E \"), React.createElement(TextInput, {\n    style: styles.input,\n    label: \"\\u0406\\u043C\\u2019\\u044F\",\n    mode: \"outlined\",\n    error: usernameError,\n    value: name,\n    onBlur: function onBlur() {\n      if (!name || !name.trim()) {\n        setUsernameError(true);\n      } else {\n        setUsernameError(false);\n      }\n    },\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.error_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, usernameError ? \"Введіть правильне ім'я\" : ''), React.createElement(TextInput, {\n    style: styles.input,\n    mode: \"outlined\",\n    label: \"Email\",\n    value: email,\n    error: emailError,\n    onBlur: function onBlur() {\n      if (!/^\\w+@\\w{2,}\\.\\w{2,5}$/.exec(email)) {\n        setEmailError(true);\n      } else {\n        setEmailError(false);\n      }\n    },\n    placeholder: \"example@example.com\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.error_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, emailError ? \"Введіть правильну пошту\" : \"\"), React.createElement(TextInput, {\n    style: styles.input,\n    mode: \"outlined\",\n    label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    error: passwordError,\n    value: password,\n    onBlur: function onBlur() {\n      if (!(password.length > 7 && /.*?[\\!\\@\\#\\$\\%\\^&\\*;\\:\\+=\\-_\\\\\\/,\\.].*/.exec(password))) {\n        setPasswordError(true);\n      } else {\n        setPasswordError(false);\n      }\n    },\n    placeholder: \"\\u043C\\u0456\\u043D\\u0456\\u043C\\u0443\\u043C 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.error_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, passwordError ? 'Мінімум 8 символів та один спеціальний символ' : ''), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, React.createElement(Checkbox, {\n    color: \"#0245A3\",\n    status: checked ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      setChecked(!checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.text_terms_of_service,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"\\u042F \\u043F\\u0440\\u043E\\u0447\\u0438\\u0442\\u0430\\u0432 \\u0456 \\u0437\\u0433\\u043E\\u0434\\u0435\\u043D \\u0437 \\u0423\\u043C\\u043E\\u0432\\u0430\\u043C\\u0438 \\u0421\\u0435\\u0440\\u0432\\u0456\\u0441\\u0443 \\u0442\\u0430 \\u043D\\u0430\\u0448\\u043E\\u044E \\u041F\\u043E\\u043B\\u0456\\u0442\\u0438\\u043A\\u043E\\u044E \\u041A\\u043E\\u043D\\u0444\\u0456\\u0434\\u0435\\u043D\\u0446\\u0456\\u0439\\u043D\\u043E\\u0441\\u0442\\u0456\")), React.createElement(View, {\n    style: styles.middle_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text_sign_up,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"), React.createElement(IconButton, {\n    icon: 'chevron-right',\n    size: 50,\n    color: \"#0245A3\",\n    disabled: !checked,\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.bottom_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text_have_account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u0436\\u0435 \\u043C\\u0430\\u0454\\u0442\\u0435 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"), React.createElement(Button, {\n    uppercase: false,\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.sign_in,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 24\n    }\n  }, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\")))));\n}\nvar styles = StyleSheet.create({\n  sign_in: {\n    color: \"black\",\n    textDecorationLine: 'underline'\n  },\n  container: {\n    marginHorizontal: '10%',\n    height: screenHeight - imageHeight\n  },\n  image: {\n    alignSelf: 'center',\n    height: imageHeight,\n    width: imageWidth\n  },\n  text_get_started: {\n    marginTop: 30,\n    fontSize: 28,\n    fontWeight: 'bold'\n  },\n  input: {\n    margin: 5,\n    marginLeft: 0\n  },\n  text_terms_of_service: {\n    lineHeight: 21,\n    fontSize: 14,\n    color: '#0007'\n  },\n  text_sign_up: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginVertical: 26\n  },\n  middle_wrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between'\n  },\n  bottom_wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  text_have_account: {\n    lineHeight: 21,\n    fontSize: 16,\n    color: '#0007'\n  },\n  error_text: {\n    color: '#b00'\n  }\n});","map":{"version":3,"sources":["C:/Users/User/projects/Secterica/Gon/App/GonAppV20/components/SignUpScreen.js"],"names":["useNavigation","React","useState","Button","TextInput","Checkbox","useTheme","IconButton","imageWidth","Dimensions","get","width","imageHeight","screenHeight","height","SignUpScreen","name","setName","email","setEmail","password","setPassword","checked","setChecked","emailError","setEmailError","usernameError","setUsernameError","passwordError","setPasswordError","navigation","colors","styles","image","require","container","text_get_started","input","trim","error_text","exec","length","flexDirection","text_terms_of_service","middle_wrapper","text_sign_up","bottom_wrapper","text_have_account","navigate","sign_in","StyleSheet","create","color","textDecorationLine","marginHorizontal","alignSelf","marginTop","fontSize","fontWeight","margin","marginLeft","lineHeight","marginVertical","flex","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react'\nimport { Dimensions, StyleSheet, Text, View, Image, KeyboardAvoidingView } from 'react-native'\nimport { Button, TextInput, Checkbox, useTheme, IconButton } from 'react-native-paper'\n// import { TextInput } from 'react-native'\n\nconst imageWidth = Dimensions.get(\"screen\").width * 0.8;\nconst imageHeight = imageWidth;\nconst screenHeight = Dimensions.get('screen').height;\n\nexport default function SignUpScreen() {\n\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [checked, setChecked] = useState(false)\n\n    const [emailError, setEmailError] = useState(false)\n    const [usernameError, setUsernameError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n\n\n    const navigation = useNavigation()\n\n    const colors = useTheme().colors;\n\n    return (\n        <View>\n\n            <Image style={styles.image} source={require(\"../photos/login_signup/login.jpg\")} />\n            <View style={styles.container}>\n                {/* <KeyboardAvoidingView> */}\n                    <Text style={styles.text_get_started}> Розпочнемо </Text>\n                    <TextInput\n                        style={styles.input}\n                        label=\"Ім’я\"\n                        mode='outlined'\n                        error={usernameError}\n                        value={name}\n                        onBlur={() => {\n                            if (!name || !name.trim()) {\n                                setUsernameError(true);\n                            } else {\n                                setUsernameError(false)\n                            }\n                        }}\n                        onChangeText={name => setName(name)}\n                    />\n                    <Text style={styles.error_text}>{usernameError ? \"Введіть правильне ім'я\" : ''}</Text>\n\n                    <TextInput\n                        style={styles.input}\n                        mode='outlined'\n                        label=\"Email\"\n                        value={email}\n                        error={emailError}\n                        onBlur={() => {\n                            if (!(/^\\w+@\\w{2,}\\.\\w{2,5}$/.exec(email))) {\n                                setEmailError(true);\n                            } else {\n                                setEmailError(false)\n                            }\n                        }}\n                        placeholder=\"example@example.com\"\n                        onChangeText={email => setEmail(email)}\n\n                    />\n                    <Text style={styles.error_text}>{emailError ? \"Введіть правильну пошту\" : \"\"}</Text>\n\n                    <TextInput\n                        style={styles.input}\n                        mode='outlined'\n                        label=\"Пароль\"\n                        error={passwordError}\n                        value={password}\n                        onBlur={() => {\n                            if (!(password.length > 7 && /.*?[\\!\\@\\#\\$\\%\\^&\\*;\\:\\+=\\-_\\\\\\/,\\.].*/.exec(password))) {\n                                setPasswordError(true);\n                            } else {\n                                setPasswordError(false)\n                            }\n                        }}\n                        placeholder=\"мінімум 8 символів\"\n                        onChangeText={password => setPassword(password)}\n                        secureTextEntry={true}\n                    />\n                    <Text style={styles.error_text}>{passwordError ? 'Мінімум 8 символів та один спеціальний символ' : ''}</Text>\n                {/* </KeyboardAvoidingView> */}\n                <View style={{ flexDirection: 'row' }}>\n\n                    <Checkbox color={\"#0245A3\"}\n                        status={checked ? 'checked' : 'unchecked'}\n                        onPress={() => {\n                            setChecked(!checked);\n                        }}\n                    />\n                    <Text style={styles.text_terms_of_service}>Я прочитав і згоден з Умовами Сервісу\n                        та нашою Політикою Конфіденційності</Text>\n                </View>\n                <View style={styles.middle_wrapper}>\n                    <Text style={styles.text_sign_up}>Зареєструватися</Text>\n                    {/* <Button icon={'chevron-right'}/> */}\n                    {/* <Appbar.Action\n                        theme={{ colors: { disabled: colors.primary } }}\n                        icon={'chevron-right'}\n                        size={50}\n                        disabled={!checked}\n                    /> */}\n                    <IconButton\n                        icon={'chevron-right'}\n                        size={50}\n                        color={\"#0245A3\"}\n                        disabled={!checked}\n                        onPress={() => {\n                        }}\n\n                    />\n                    {/* <Avatar.Icon icon={'chevron-right'} size={50} /> */}\n                </View>\n                <View style={styles.bottom_wrapper}>\n                    <Text style={styles.text_have_account}>Вже маєте аккаунт?</Text>\n                    <Button uppercase={false} onPress={() => {\n                        navigation.navigate('Login')\n                    }}><Text style={styles.sign_in}>Увійти</Text></Button>\n                </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    sign_in: {\n        color: \"black\",\n        textDecorationLine: 'underline',\n    },\n    container: {\n        marginHorizontal: '10%',\n        height: screenHeight - imageHeight,\n    },\n    image: {\n        alignSelf: 'center',\n        height: imageHeight,\n        width: imageWidth,\n    },\n    text_get_started: {\n        marginTop: 30,\n        fontSize: 28,\n        fontWeight: 'bold',\n    },\n    input: {\n        margin: 5,\n        marginLeft: 0,\n\n    },\n    text_terms_of_service: {\n        lineHeight: 21,\n        fontSize: 14,\n        color: '#0007'\n    },\n    text_sign_up: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginVertical: 26,\n    },\n    middle_wrapper: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'space-between'\n    },\n    bottom_wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 20,\n    },\n    text_have_account: {\n        lineHeight: 21,\n        fontSize: 16,\n        color: '#0007',\n    },\n    error_text: {\n        color: '#b00',\n    },\n})\n"]},"metadata":{},"sourceType":"module"}